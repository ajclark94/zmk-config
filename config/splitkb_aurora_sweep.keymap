/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp Q    &kp W    &kp E             &kp R          &kp T        &kp Y         &kp U      &kp I    &kp O                      &kp P
 &mt LEFT_SHIFT A  &lt 5 S  &lt 1 D           &lt 3 F          &kp G        &kp H       &lt 4 J    &lt 2 K  &lt 6 L  &mt RIGHT_SHIFT SEMICOLON
            &kp Z    &kp X    &kp C             &kp V          &kp B        &kp N         &kp M  &kp COMMA  &kp DOT                  &kp SLASH
                                     &kp LEFT_CONTROL  &kp BACKSPACE  &lt 7 SPACE  &kp LEFT_ALT
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        Mouse_Actions {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        Navigation {
            bindings = <
   &trans    &trans    &kp PAGE_UP     &trans  &trans  &trans        &trans  &trans              &trans  &trans
 &kp LEFT    &kp UP       &kp DOWN  &kp RIGHT  &trans  &trans  &kp LEFT_GUI   &none  &mt LCTRL LEFT_ALT  &trans
   &trans  &kp HOME  &kp PAGE_DOWN    &kp END  &trans  &trans        &trans  &trans              &trans  &trans
                                       &trans  &trans  &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        Symbols__1 {
            bindings = <
    &trans    &trans    &trans  &trans  &trans     &trans  &kp UNDER   &kp PIPE   &kp SINGLE_QUOTE      &trans
 &kp CARET  &kp STAR  &kp AMPS   &none  &trans  &kp POUND  &kp TILDE  &kp SLASH  &kp DOUBLE_QUOTES  &kp DOLLAR
    &trans    &trans    &trans  &trans  &trans     &trans  &kp MINUS   &kp BSLH          &kp GRAVE      &trans
                                &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        Symbols__2 {
            bindings = <
         &trans        &kp COLON     &kp LESS_THAN   &kp GREATER_THAN  &kp SEMI  &trans        &trans     &trans    &trans       &trans
 &kp LEFT_BRACE  &kp RIGHT_BRACE          &kp LPAR           &kp RPAR    &kp AT  &trans         &none  &kp EQUAL  &kp PLUS  &kp PERCENT
         &trans         &kp EXCL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &trans  &trans        &trans     &trans    &trans       &trans
                                                         &kp C_VOL_UP    &trans  &trans  &kp C_VOL_DN
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        Function_keys {
            bindings = <
 &trans  &trans                     &trans  &trans  &trans  &trans  &kp F7  &kp F8  &kp F9  &kp F10
 &trans   &none  &mt LEFT_CONTROL LEFT_ALT  &trans  &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11
 &trans  &trans                     &trans  &trans  &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12
                                            &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        Numpad {
            bindings = <
    &kp SLASH  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &kp PLUS  &trans  &trans  &trans  &trans  &trans
 &kp NUMBER_0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &trans  &trans  &trans   &none  &trans
    &kp ASTRK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &trans  &trans  &trans  &trans  &trans
                                                 &trans     &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };

        Misc {
            bindings = <
 &trans       &trans  &kp COLON    &kp ESC   &trans  &trans        &trans               &trans                 &trans      &kp DEL
 &trans  &kp PERCENT  &kp SLASH  &kp ENTER   &trans  &trans  &kp LEFT_GUI               &trans                 &trans       &trans
 &trans       &trans     &trans   &kp EXCL   &trans  &trans        &trans  &mt RIGHT_ALT COMMA  &mt RIGHT_CONTROL DOT  &kp C_RESET
                                    &trans  &kp TAB   &none        &trans
            >;

            sensor-bindings = <&inc_dec_kp A A &inc_dec_kp A A>;
        };
    };
};
